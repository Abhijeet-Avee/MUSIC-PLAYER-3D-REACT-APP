{"version":3,"sources":["components/Searchbar.js","components/Playlist.js","components/Searchresults.js","container/Search.js","App.js","index.js"],"names":["Searchbar","props","autoFocus","autoCorrect","autoCapitalize","spellCheck","id","placeholder","text","onKeyDown","getContent","Playlist","artwork","previewUrl","track","className","onClick","openMedia","style","backgroundImage","Searchresult","resultdata","map","ele","artworkUrl100","trackCensoredName","trackId","Search","artistImage","document","querySelector","overlay","searchElem","state","searchTxtValue","search","url","URL","params","term","media","URLSearchParams","fetch","mode","method","headers","then","response","json","data","console","log","setState","results","catch","err","event","target","value","this","key","giveMeData","blur","title","innerHTML","classList","remove","background","toggleOverlay","toggle","querySelectorAll","forEach","playlist","Container","name","bind","closeMedia","listener","React","Component","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.11bcee33.chunk.js","sourcesContent":["import React from 'react';\r\nexport function Searchbar(props){\r\n    return(\r\n        <>\r\n         <input autoFocus autoCorrect=\"off\" autoCapitalize=\"off\" \r\n         spellCheck=\"false\" id=\"search\" placeholder=\"Artist ..\" text=\"text\"\r\n         onKeyDown={props.getContent}/>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nexport const Playlist = (props)=>{\r\n    const artwork = props.artwork;\r\n    const previewUrl = props.previewUrl;\r\n    const track = props.track;\r\n    return(\r\n    <>\r\n        <div className=\"playlist\" onClick={()=>props.openMedia(previewUrl,track)}\r\n        style={{backgroundImage: `url(${artwork})`}}>\r\n        </div>\r\n    </>\r\n    )\r\n}","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Playlist } from './Playlist';\r\nexport function Searchresult(props){\r\n    return(\r\n        <>\r\n         {props.resultdata.map(ele=><Playlist key={ele.trackId} artwork={ele.artworkUrl100} previewUrl={ele.previewUrl} \r\n          track={ele.trackCensoredName} openMedia={props.openMedia}/>) }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Searchbar } from '../components/Searchbar';\r\nimport {Container} from 'react-bootstrap';\r\nimport {Searchresult} from '../components/Searchresults'\r\n\r\nexport default class Search extends React.Component{\r\n    //member variables\r\n    artistImage = document.querySelector('.artist');\r\n    overlay = document.querySelector('.overlay');\r\n    searchElem = document.querySelector('#search');\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {resultdata:[]};\r\n        this.searchTxtValue = '';\r\n    }\r\n    componentDidMount(){\r\n        //this.giveMeData();\r\n    }\r\n    giveMeData(search){\r\n        const url = new URL('https://itunes.apple.com/search');\r\n        const params = {term: search, media: 'musicVideo'};\r\n        url.search = new URLSearchParams(params);\r\n        /*fetch(url,{method:'POST'})\r\n            .then(results => results.json())\r\n            .then(data =>{\r\n                console.log('Data is ',data);\r\n                this.setState({resultdata:data.results});\r\n                console.log.log('Response is Coming');\r\n            }).catch(err=>{\r\n                console.log('Error is  ',err);\r\n            })*/\r\n            const options = {\r\n                mode: 'cors',\r\n                method: 'POST',\r\n                headers:{\r\n                    'Content-Type' : 'application/json',\r\n                    'value': 'https://abhijeet-avee.github.io/MuiscPlayer3D/'\r\n                },\r\n            }\r\n        const promise = fetch(url,options);\r\n        promise.then(response=>{\r\n            var p = response.json();\r\n            p.then(data=>{\r\n                console.log('Data is ',data);\r\n                this.setState({resultdata:data.results});\r\n            })\r\n            .catch(err=>{\r\n                console.log('Error in JSON ',err);\r\n            })\r\n            console.log('Response is Coming');\r\n        }).catch(err=>{\r\n            console.log('Error From Server');\r\n        })\r\n    }\r\n    listener(event){\r\n        let data= event.target.value;\r\n        this.searchTxtValue = data;\r\n        console.log('Calling by child ',this.searchTxtValue);\r\n        if(event.key==='Enter'){\r\n            this.giveMeData(this.searchTxtValue);\r\n            document.querySelector('#search').blur();\r\n        }\r\n    }\r\n    openMedia(url,title){\r\n        document.querySelector('.media').innerHTML \r\n            = `<div className=\"container\">\r\n                <div className=\"col-xs-12\">\r\n                <video controls autoplay src=\"${url}\"></video>\r\n                </div>\r\n                <div className=\"col-xs-12\">\r\n                <p>${title}</p>\r\n                </div>\r\n                </div>`\r\n        document.querySelector('.media').classList.remove('hidden');\r\n        document.querySelector('.artist').style.background = \"url(https://i.gifer.com/origin/5e/5e1256a5a34e5f9c6e9b8942ef933de6_w200.gif)\";\r\n        console.log(\"I am clicked\");\r\n        this.toggleOverlay();\r\n    }\r\n    closeMedia(){\r\n        document.querySelector('.media').innerHTML='';\r\n        document.querySelector('.overlay').classList.toggle('blur');\r\n        document.querySelectorAll('.playlist').forEach(playlist => playlist.classList.toggle('blur'));\r\n        document.querySelector('.artist').style.background = 'none';\r\n    }\r\n    toggleOverlay(){\r\n        document.querySelector('.overlay').classList.toggle('blur');\r\n        document.querySelectorAll('.playlist').forEach(playlist => playlist.classList.toggle('blur'));\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n                <Container>\r\n                <hr></hr>\r\n                <h1 className='alert-info text-center'>{this.props.title}</h1>\r\n                <hr></hr>\r\n                <h6 className='alert-danger text-center'>developed by {this.props.name}</h6>\r\n                <hr></hr>\r\n                <div className=\"containerPlay\">\r\n                <Searchresult resultdata={this.state.resultdata} openMedia={this.openMedia.bind(this)}/>\r\n                </div>\r\n                <div className=\"artist\"></div>\r\n                <div className=\"overlay\" onClick={this.closeMedia}></div>\r\n                <Searchbar getContent={this.listener.bind(this)}/>\r\n                <div className=\"media hidden\"></div>\r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport Search from './container/Search';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport function App(){\n  return(\n    <Search title='MUSIC PLAYER' name='YASH-AVEE'/>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\nimport '../src/index.css';      //include the index.css file here not in index.html\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n)"],"sourceRoot":""}